<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="SoftStocksDBCredentials" targetNamespace="http://tempuri.org/SoftStocksDBCredentials.xsd" xmlns:mstns="http://tempuri.org/SoftStocksDBCredentials.xsd" xmlns="http://tempuri.org/SoftStocksDBCredentials.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="SoftStocksDBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="SoftStocksDBConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.SoftStocksGUI.Properties.Settings.GlobalReference.Default.SoftStocksDBConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CredentialsTableAdapter" GeneratorDataComponentClassName="CredentialsTableAdapter" Name="Credentials" UserDataComponentName="CredentialsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="SoftStocksDBConnectionString (Settings)" DbObjectName="dbo.Credentials" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Credentials] WHERE (([Username] = @Original_Username) AND ([StaffId] = @Original_StaffId) AND ([Password] = @Original_Password))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_Username" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StaffId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StaffId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_Password" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Credentials] ([Username], [StaffId], [Password]) VALUES (@Username, @StaffId, @Password);
SELECT Username, StaffId, Password FROM Credentials WHERE (Username = @Username)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Username" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StaffId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StaffId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT Username, StaffId, Password FROM dbo.Credentials</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Credentials] SET [Username] = @Username, [StaffId] = @StaffId, [Password] = @Password WHERE (([Username] = @Original_Username) AND ([StaffId] = @Original_StaffId) AND ([Password] = @Original_Password));
SELECT Username, StaffId, Password FROM Credentials WHERE (Username = @Username)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Username" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@StaffId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StaffId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Password" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_Username" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Username" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_StaffId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="StaffId" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_Password" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="Password" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="Username" DataSetColumn="Username" />
              <Mapping SourceColumn="StaffId" DataSetColumn="StaffId" />
              <Mapping SourceColumn="Password" DataSetColumn="Password" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="SoftStocksDBCredentials" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="SoftStocksDBCredentials" msprop:Generator_DataSetName="SoftStocksDBCredentials">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Credentials" msprop:Generator_RowEvHandlerName="CredentialsRowChangeEventHandler" msprop:Generator_RowDeletedName="CredentialsRowDeleted" msprop:Generator_RowDeletingName="CredentialsRowDeleting" msprop:Generator_RowEvArgName="CredentialsRowChangeEvent" msprop:Generator_TablePropName="Credentials" msprop:Generator_RowChangedName="CredentialsRowChanged" msprop:Generator_RowChangingName="CredentialsRowChanging" msprop:Generator_TableClassName="CredentialsDataTable" msprop:Generator_RowClassName="CredentialsRow" msprop:Generator_TableVarName="tableCredentials" msprop:Generator_UserTableName="Credentials">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="Username" msprop:Generator_ColumnPropNameInRow="Username" msprop:Generator_ColumnPropNameInTable="UsernameColumn" msprop:Generator_ColumnVarNameInTable="columnUsername" msprop:Generator_UserColumnName="Username">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="StaffId" msprop:Generator_ColumnPropNameInRow="StaffId" msprop:Generator_ColumnPropNameInTable="StaffIdColumn" msprop:Generator_ColumnVarNameInTable="columnStaffId" msprop:Generator_UserColumnName="StaffId" type="xs:int" />
              <xs:element name="Password" msprop:Generator_ColumnPropNameInRow="Password" msprop:Generator_ColumnPropNameInTable="PasswordColumn" msprop:Generator_ColumnVarNameInTable="columnPassword" msprop:Generator_UserColumnName="Password">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Credentials" />
      <xs:field xpath="mstns:Username" />
    </xs:unique>
  </xs:element>
</xs:schema>